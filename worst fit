#include <stdio.h>
#include <stdbool.h>

#define BLOCK_COUNT 4
#define BLOCK_SIZES {40, 10, 30, 60}
#define PROCESS_COUNT 5
#define PROCESS_SIZES {100, 50, 30, 120, 35}

int block_sizes[BLOCK_COUNT] = BLOCK_SIZES;
int process_sizes[PROCESS_COUNT] = PROCESS_SIZES;
bool block_allocations[BLOCK_COUNT] = {false};

void allocate_memory_worst_fit(int process_size) {
    int max_block_index = -1;
    int max_block_size = -1;
    for (int i = 0; i < BLOCK_COUNT; i++) {
        if (!block_allocations[i] && block_sizes[i] >= process_size && block_sizes[i] > max_block_size) {
            max_block_index = i;
            max_block_size = block_sizes[i];
        }
    }
    if (max_block_index != -1) {
        block_allocations[max_block_index] = true;
        printf("Process of size %d KB allocated to block %d with size %d KB\n", process_size, max_block_index + 1, block_sizes[max_block_index]);
    } else {
        printf("Process of size %d KB couldn't be allocated\n", process_size);
    }
}

int main() {
    for (int i = 0; i < PROCESS_COUNT; i++) {
        allocate_memory_worst_fit(process_sizes[i]);
    }
    return 0;
}

